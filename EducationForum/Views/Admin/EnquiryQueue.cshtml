
@{
    ViewData["Title"] = "EnquiryQueue";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<link href="~/css/dashboard.css" rel="stylesheet" />
<style>
    .modal-dialog {
        max-width: 80%;
    }
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header" style="background-color:#D3D3D3">
                Customer Group List
            </div>

            <div class="card-body">
                @* <div class="form-row">
                <div class="form-group col-md-3">
                <label class="small mb-1" for="OrderedDate">Order Date Range</label>

                </div>
                <div class="form-group col-md-6" style="margin-top:30px">
                <button class="btn btn-primary btn-block float-right col-md-3 shadow" type="button" id="SearchbyDatebtn" style="margin-top:0px;margin-right:20px">
                <div class="spinner-border spinner-border-sm text-light" role="status" id="SearchbyDateSpinner">
                <span class="sr-only">Loading...</span>
                </div>
                Submit
                </button>
                </div>
                </div> *@
                @* Skeliton loader start *@
                @* <table class="LoaderTable" id="LoaderTable">
                <thead>
                <tr>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                <th><div class="skeleton-loader skeleton-header"></div></th>
                </tr>
                </thead>
                <tbody>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                <tr>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                <td><div class="skeleton-loader skeleton-cell"></div></td>
                </tr>
                </tbody>
                </table> *@
                @* Skeliton loader Ends *@
                <table id="myTable" class="table table-hover table-bordered">
                    <thead>
                        <tr>
                            <th><label>Enquiry ID</label></th>
                            <th><label>Name</label></th>

                            <th><label>Email</label></th>

                            <th><label>Phone</label></th>
                            <th><label>Class Type</label></th>
                            <th><label>Date</label></th>
                            <th><label>Responded</label></th>

                            <th><label>OnHold</label></th>
                            <th><label>Request Call Back</label></th>

                            <th><label>Call Attempt Failed</label></th>
                        </tr>

                    </thead>
                    <tfoot>
                        <tr>
                            <th><input type="text" disabled /></th>
                            <th><input id="searchbyname" type="text" placeholder="Search Name" /></th>
                            <th><input id="searchbyemail" type="text" placeholder="Search Email" /></th>
                            <th><input id="searchbyphone" type="text" placeholder="Search Phone" /></th>
                            <th><input type="text" disabled /></th>
                            <th><input id="OrderedDate" name="OrderedDate" type="text" placeholder="Select Date Range" /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                        </tr>
                    </tfoot>
                </table>
            </div>
            <div class="row">
                <div class="col-md-6" id="table-info">
                </div>
                <div class="col-md-6">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination" id="CustomPagination">
                        </ul>
                    </nav>
                </div>

            </div>

        </div>
    </div>
</div>
<div class="container mt-5">
    <div class="modal fade" id="enquiryFormModal" tabindex="-1" aria-labelledby="enquiryFormModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="enquiryFormModalLabel">Enquiry Form</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="Closepopup()"></button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="row mb-3">
                            <div class="col-6">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" id="name" name="name" class="form-control" disabled>
                            </div>
                            <div class="col-6">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" id="email" name="email" class="form-control" disabled>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-6">
                                <label for="phone" class="form-label">Phone</label>
                                <input type="text" id="phone" name="phone" class="form-control" disabled>
                            </div>
                            <div class="col-6">
                                <label for="classType" class="form-label">Class Type</label>
                                <input type="text" id="classType" name="classType" class="form-control" disabled>
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col-6">
                                <label for="instructiveLanguage" class="form-label">Instructive Language</label>
                                <input type="text" id="instructiveLanguage" name="instructiveLanguage" class="form-control" disabled>
                            </div>
                            <div class="col-6">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="IsResponded">
                                    <label class="form-check-label" for="IsResponded">
                                        Responded <span id="IsRespondeDate"></span>
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="IsOnHold">
                                    <label class="form-check-label" for="IsOnHold">
                                        OnHold
                                        @* <span id="IsOnHoldDate"></span> *@
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="IsRequestCallBack">
                                    <label class="form-check-label" for="IsRequestCallBack">
                                        Request call back <span id="IsRequestCallBackDate"></span>
                                    </label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="IsCallAttemptFailed">
                                    <label class="form-check-label" for="IsCallAttemptFailed">
                                        Call Attemp Failed
                                        @* <span id="IsCallAttemptFailedDate"></span> *@
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-12">
                                <label for="enquirerNote" class="form-label">Enquirer Note</label>
                                <textarea id="enquirerNote" name="enquirerNote" class="form-control" rows="4" disabled></textarea>
                            </div>
                        </div>

                        <div class="row mb-4">
                            <div class="col-12">
                                <label for="responderNote" class="form-label">Responder Note</label>
                                <textarea id="responderNote" name="responderNote" class="form-control" rows="4"></textarea>
                            </div>
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary" id="EnquiryResponeSubmit">
                                <div class="spinner-border spinner-border-sm" role="status" id="EnquiryResponeSubmitSpinner">
                                    <span class="sr-only">Loading...</span>
                                </div>
                                Submit
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    // $('#LoaderTable').show();
    // $('#myTable').hide();
    $('#EnquiryResponeSubmitSpinner').hide();
    var totalCount = 0;
    var CurrentpageIndex = 1;
    var Searchstartdate = '';
    var SearchEnddate = '';
    var DashboardDatatable = $('#myTable').DataTable({
        "scrollY": '400px',
        "scrollX": true,
        "scrollCollapse": true,
        "paging": true,
        "order": [],
        "layout": {
            "topStart": null,
            "topEnd": null,
            "bottomStart": null,
            "bottomEnd": null,
        },
        "columnDefs": [
            { "target": 0, "visible": false, },
            { "targets": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "searchable": false, "orderable": false }
        ],
        "columns": [
            { "data": "enquiryID", "name": "EnquiryID", "autoWidth": true },
            { "data": "name", "name": "Name", "autoWidth": true },
            { "data": "email", "name": "Email", "autoWidth": true },
            { "data": "phone", "name": "Phone", "autoWidth": true },
            { "data": "classType", "name": "ClassType", "autoWidth": true },
            {
                "data": "dateAdded", "name": "DateAdded", "autoWidth": true,
                "render": function (data, type, full, meta) {
                    return moment(data).format('DD/MM/YYYY');

                }
            },
            {
                "data": "isResponded", "name": "IsResponded", "autoWidth": true,
                "render": function (data, type, full, meta) {
                    if (data === true) {
                        return '<span class="isRespondedtrue">Yes</span>';
                    }
                    else if (data === false) {
                        return '<span class="isRespondedfalse">No</span>';
                    }
                    return '';

                }
            },
            {
                "data": "isOnHold", "name": "IsOnHold", "autoWidth": true,
                "render": function (data, type, full, meta) {
                    if (data === true) {
                        return '<span class="isOnHoldtrue">Yes</span>';
                    }
                    else if (data === false) {
                        return '<span class="isOnHoldfalse">No</span>';
                    }
                    return '';

                }
            },
            {
                "data": "isRequestCallBack", "name": "IsRequestCallBack", "autoWidth": true,
                "render": function (data, type, full, meta) {
                    if (data === true) {
                        return '<span class="isRequestCallBacktrue">Yes</span>';
                    }
                    else if (data === false) {
                        return '<span class="isRequestCallBackfalse">No</span>';
                    }
                    return '';

                }
            },
            {
                "data": "isCallAttemptFailed", "name": "IsCallAttemptFailed", "autoWidth": true,
                "render": function (data, type, full, meta) {
                    if (data === true) {
                        return '<span class="isCallAttemptFailedtrue">Yes</span>';
                    }
                    else if (data === false) {
                        return '<span class="isCallAttemptFailedfalse">No</span>';
                    }
                    return '';

                }
            },
            {
                "render": function (data, type, full, meta) {
                    return '<span onclick="EditEnquiry(' + full["enquiryID"] + ')" style="cursor: pointer;"><i class="fas fa-edit"></i></span>';
                }
                // "targets": 9
            }
        ],
        "data": [], // Initially, no data is bound
        "initComplete": function () {

        }
    });
    const today = new Date();
    $(function () {
        $('#OrderedDate').daterangepicker({
            opens: 'center',
            autoUpdateInput: false,
            showDropdowns: true,
            maxDate: today,
            drops: 'up',
        });
        // , function (start, end, label) {
        //     //console.log("A new date selection was made: " + start.format('YYYY-MM-DD') + ' to ' + end.format('YYYY-MM-DD'));
        //     Searchstartdate = start.format('YYYY-MM-DD');
        //     SearchEnddate = end.format('YYYY-MM-DD');
        // });
    });
    $('#OrderedDate').on('apply.daterangepicker', function (ev, picker) {
        Searchstartdate = picker.startDate.format('DD/MM/YYYY');
        SearchEnddate = picker.endDate.format('DD/MM/YYYY');
        $(this).val(picker.startDate.format('DD/MM/YYYY') + ' - ' + picker.endDate.format('DD/MM/YYYY'));
    });

    $('#OrderedDate').on('cancel.daterangepicker', function (ev, picker) {
        Searchstartdate = '';
        SearchEnddate = '';
        $(this).val('');
    });
    $(document).ready(function () {

        DataTableBindData(1)


    });
    function CustomPagination(totalCount, currentPage) {
        var totalPages = Math.ceil(totalCount / 10);
        var pagination = '';

        if (currentPage > 1) {
            pagination += '<li class="page-item"><a class="page-link" onclick="PaginationClick(' + (currentPage - 1) + ')">Previous</a></li>';
        }
        else {
            pagination += '<li class="page-item"><a class="page-link" >Previous</a></li>';
        }
        var i = 1;
        if (totalPages > 2) {
            if (currentPage === totalPages && totalPages > 1) {
                i = currentPage - 2;
            }
            else if (currentPage === 1) {
                totalPages = 3
            }
            else {
                i = currentPage - 1;
                totalPages = currentPage + 1
            }
        }

        for (i; i <= totalPages; i++) {
            pagination += '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">';
            pagination += '<a class="page-link" href="#" onclick="PaginationClick(' + i + ')">' + i + '</a>';
            pagination += '</li>';
        }

        if (currentPage < totalPages) {
            pagination += '<li class="page-item"><a class="page-link" onclick="PaginationClick(' + (currentPage + 1) + ')">Next</a></li>';
        }
        else {
            pagination += '<li class="page-item"><a class="page-link">Next</a></li>';
        }

        $("#CustomPagination").html(pagination);
    }
    function BindDatatableInfo(TotalCount, pageno) {
        var startcount = pageno >= 1 ? ((pageno - 1) + '1') : '0';
        var endcount = pageno + '0';
        let toolbar = `<b>Showing ${startcount} to ${endcount} of ${TotalCount} entries</b>`;
        // $('.dt-info').html(toolbar);
        $('#table-info').html(toolbar);
    }
    // function OnSortclick() {
    //     var ordering = DashboardDatatable.order();
    //     if (ordering.length === 0) return;
    //     let [columnid, sortorder] = ordering[0]
    //     var sortcolumn = columnid == 1 ? 'Name' : columnid == 2 ? 'Email' : columnid == 3 ? 'Phone' : '';
    //     //console.log('Table ordering changed: ' + JSON.stringify(ordering));
    //     DataTableBindData(1, '', '', '', sortcolumn, (sortorder == 'asc' ? 'ASC' : sortorder == 'desc' ? 'DESC':'ASC'));
    // }

    // function handlePageClick(index) {
    //     let pageCount = Math.ceil(totalCount / 10)
    //     if (index === 'first' || index === 'previous' || index === 'next' || index === 'last') {
    //         // Get all buttons in the pagination
    //         const buttons = document.querySelectorAll('.pgbtn');
    //         // Find the previously active button (if any)
    //         const previousActiveButton = document.querySelector('.dt-paging-button.current.pgbtn');

    //         // if (previousActiveButton) {
    //         //     previousActiveButton.classList.remove('current');
    //         //     previousActiveButton.removeAttribute('aria-current');
    //         // }
    //         var NextButton = '';
    //         if (index === 'next') {
    //             NextButton = buttons[parseInt(previousActiveButton.innerText)]
    //             if (parseInt(previousActiveButton.innerText) === totalCount) return;
    //         }
    //         else if (index === 'previous') {
    //             NextButton = buttons[(parseInt(previousActiveButton.innerText) - 2)]
    //             if (parseInt(previousActiveButton.innerText) === 1) return;
    //         }
    //         else if (index === 'first') {
    //             NextButton = buttons[0]
    //             if (parseInt(previousActiveButton.innerText) === 1) return;
    //         }
    //         else if (index === 'last') {
    //             NextButton = buttons[pageCount - 1]
    //             if (parseInt(previousActiveButton.innerText) === totalCount) return;
    //         }

    //         // if (NextButton) {
    //         //     NextButton.classList.add('current');
    //         //     NextButton.setAttribute('aria-current', 'page');
    //         // }
    //         index = parseInt(NextButton.innerText)
    //     }
    //     index = index - 1;


    //     const btnfirst = document.querySelector('.dt-paging-button.first');
    //     const btnprevious = document.querySelector('.dt-paging-button.previous');
    //     const btnnext = document.querySelector('.dt-paging-button.next');
    //     const btnlast = document.querySelector('.dt-paging-button.last');
    //     // Get all buttons in the pagination
    //     const buttons = document.querySelectorAll('.pgbtn');

    //     // Find the previously active button (if any)
    //     const previousActiveButton = document.querySelector('.dt-paging-button.current.pgbtn');

    //     // Remove the 'current' class from the previous active button (if it exists)
    //     if (previousActiveButton) {
    //         previousActiveButton.classList.remove('current');
    //         previousActiveButton.removeAttribute('aria-current');
    //     }

    //     // Find the clicked button based on the index and add 'current' class
    //     const clickedButton = buttons[index];
    //     if (clickedButton) {
    //         clickedButton.classList.add('current');
    //         clickedButton.setAttribute('aria-current', 'page');
    //     }

    //     // Call any method to handle the page change (e.g., load data for the new page)
    //     // Replace this with your data update logic
    //     if (index === pageCount - 1) {
    //         btnlast.classList.add('disabled');
    //         btnlast.setAttribute('aria-disabled', 'true');
    //         btnnext.classList.add('disabled');
    //         btnnext.setAttribute('aria-disabled', 'true');

    //         btnfirst.classList.remove('disabled');
    //         btnfirst.removeAttribute('aria-disabled');
    //         btnprevious.classList.remove('disabled');
    //         btnprevious.removeAttribute('aria-disabled');
    //     }
    //     else if (index === 0) {
    //         btnfirst.classList.add('disabled');
    //         btnfirst.setAttribute('aria-disabled', 'true');
    //         btnprevious.classList.add('disabled');
    //         btnprevious.setAttribute('aria-disabled', 'true');

    //         btnlast.classList.remove('disabled');
    //         btnlast.removeAttribute('aria-disabled');
    //         btnnext.classList.remove('disabled');
    //         btnnext.removeAttribute('aria-disabled');
    //     }
    //     else {
    //         btnfirst.classList.remove('disabled');
    //         btnfirst.removeAttribute('aria-disabled');
    //         btnprevious.classList.remove('disabled');
    //         btnprevious.removeAttribute('aria-disabled');
    //         btnlast.classList.remove('disabled');
    //         btnlast.removeAttribute('aria-disabled');
    //         btnnext.classList.remove('disabled');
    //         btnnext.removeAttribute('aria-disabled');
    //     }
    //     // $('#myTable').DataTable().destroy();
    //     DataTableBindData(index + 1)
    // }
    // function BindPagination(TotalCount) {

    //     let pageCount = Math.ceil(TotalCount / 10)
    //     // Create the layout container
    //     // var layoutCell = $('<div>', {
    //     //     class: 'dt-layout-cell dt-layout-end'
    //     // });

    //     // // Create the pagination container
    //     // var pagingDiv = $('<div>', {
    //     //     class: 'dt-paging'
    //     // });

    //     // Create the navigation element
    //     var nav = $('<nav>', {
    //         'aria-label': 'pagination'
    //     });

    //     // Create the fixed buttons (First, Previous)
    //     var fixedButtonsStart = [
    //         { class: 'dt-paging-button first', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'First', 'data-dt-idx': 'first', text: '«', onclick: 'handlePageClick(\'first\')' },
    //         { class: 'dt-paging-button previous', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'Previous', 'data-dt-idx': 'previous', text: '‹', onclick: 'handlePageClick(\'previous\')' }
    //     ];

    //     // Add 'First' and 'Previous' buttons
    //     fixedButtonsStart.forEach(function (button) {
    //         var btn = $('<button>', button);
    //         nav.append(btn);
    //     });

    //     // Dynamically create numbered buttons based on pageCount
    //     for (var i = 1; i <= pageCount; i++) {
    //         var buttonConfig = {
    //             class: i === 1 ? 'dt-paging-button current pgbtn' : 'dt-paging-button pgbtn', // Highlight the first button as current
    //             role: 'link',
    //             type: 'button',
    //             'aria-controls': 'example',
    //             'data-dt-idx': i - 1,
    //             text: i,
    //             'aria-current': i === 1 ? 'page' : null, // Set 'aria-current' only for the current page
    //             onclick: 'handlePageClick(' + i + ')'
    //         };
    //         var btn = $('<button>', buttonConfig);
    //         nav.append(btn);
    //     }

    //     // Create the fixed buttons (Next, Last)
    //     var fixedButtonsEnd = [
    //         { class: 'dt-paging-button next', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'Next', 'data-dt-idx': 'next', text: '›', onclick: 'handlePageClick(\'next\')' },
    //         { class: 'dt-paging-button last', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'Last', 'data-dt-idx': 'last', text: '»', onclick: 'handlePageClick(\'last\')' }
    //     ];

    //     // Add 'Next' and 'Last' buttons
    //     fixedButtonsEnd.forEach(function (button) {
    //         var btn = $('<button>', button);
    //         nav.append(btn);
    //     });

    //     // Build the final structure
    //     // pagingDiv.append(nav);
    //     // layoutCell.append(pagingDiv);

    //     //return layoutCell;
    //     $('.dt-paging').empty()
    //     $('.dt-paging').append(nav);
    // }
    //function eventFired(type) {
    // var ordering = DashboardDatatable.order();
    // if (ordering.length === 0) return;
    // let [columnid, sortorder] = ordering[0]
    // var sortcolumn = columnid == 1 ? 'Name' : columnid == 2 ? 'Email' : columnid == 3 ? 'Phone' : '';
    // //console.log('Table ordering changed: ' + JSON.stringify(ordering));
    // DataTableBindData(1, '', '', '', sortcolumn, (sortorder == 'asc' ? 'ASC' : 'DESC'));
    //}
    function PaginationClick(pageIndex) {
        CurrentpageIndex = pageIndex;
        DataTableBindData(CurrentpageIndex, $('#searchbyname').val(), $('#searchbyemail').val(), $('#searchbyphone').val(), '', '', Searchstartdate, SearchEnddate)
    }

    $(document).on("keydown", function (event) {
        if (event.key === "Enter" || event.keyCode === 13) {
            event.preventDefault();
            DataTableBindData(CurrentpageIndex, $('#searchbyname').val(), $('#searchbyemail').val(), $('#searchbyphone').val(), '', '', Searchstartdate, SearchEnddate)
        }
    });
    // $('.applyBtn .btn').on('click', function () {
    //     DataTableBindData(CurrentpageIndex, $('#searchbyname').val(), $('#searchbyemail').val(), $('#searchbyphone').val(), '', '', Searchstartdate, SearchEnddate)
    // })

    function Closepopup() {
        $('#enquiryFormModal').modal('hide');
    }
    function DataTableBindData(pageno = 0, name = '', email = '', phone = '', sortcolumn = '', sortorder = '', searchstartdate = '', searchEnddate = '') {
        $('#LoaderTable').show();
        return new Promise(function (resolve, reject) {
            $.ajax({
                type: 'POST',
                url: "/Admin/GetEnquiryQueueData",
                data:
                {
                    page: parseInt(pageno),
                    name: (name !== null && name !== undefined) ? name.trim() : '',
                    email: (email !== null && email !== undefined) ? email.trim() : '',
                    phone: (phone !== null && phone !== undefined) ? phone.trim() : '',
                    startdate: searchstartdate,
                    enddate: searchEnddate
                    //orderby: sortcolumn,
                    //sortOrder: sortorder
                },
                dataType: 'json',
                /* timeout: 1000,*/
                success: function (result) {
                    // $('#LoaderTable').hide();
                    // $('#myTable').show();
                    totalCount = result.recordsTotal;
                    if (result.recordsTotal > 0) {
                        DashboardDatatable.clear();
                        DashboardDatatable.rows.add(result.data);
                        DashboardDatatable.draw();
                        // BindPagination(totalCount);
                        CustomPagination(totalCount, pageno)
                        BindDatatableInfo(totalCount, pageno);
                    }
                    else {
                        DashboardDatatable.clear();
                        DashboardDatatable.rows.add([]);
                        DashboardDatatable.draw();
                        CustomPagination(0, 0)
                        BindDatatableInfo(0, 0);
                    }
                },
                error: function (err) {
                    //reject(err);
                }
            });
        });

    }
    async function GetEnquiryByID(EnquiryID) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                type: 'POST',
                url: "/Admin/GetEnquiryByID",
                data: {
                    enquiryid: EnquiryID
                },
                dataType: 'json',
                success: function (result) {
                    console.log(result);
                    if (result.enquiryID > 0) {
                        $('#name').val(result.name);
                        $('#email').val(result.email);
                        $('#phone').val(result.phone);
                        if (result.classTypes != null) {
                            $('#classType').val(result.classTypes.classType);
                        }

                        if (result.instructiveLanguage != null) {
                            $('#instructiveLanguage').val(result.instructiveLanguage.language);
                        }


                        $('#IsResponded').prop('checked', result.isResponded);
                        $('#IsRespondeDate').html(' (' + moment(result.respondedOn).format('DD/MM/YYYY HH:mm') + ')');
                        $('#IsOnHold').prop('checked', result.isOnHold);
                        // $('#IsOnHoldDate').html(result.);
                        $('#IsRequestCallBack').prop('checked', result.isRequestCallBack);
                        $('#IsRequestCallBackDate').html(' (' + moment(result.callBackDate).format('DD/MM/YYYY HH:mm') + ')');
                        $('#IsCallAttemptFailed').prop('checked', result.isCallAttemptFailed);
                        // $('#IsCallAttemptFailedDate').html(result.);
                        resolve(result);
                    } else {
                        reject("No data found");
                    }
                },
                error: function (err) {
                    //reject(err);
                }
            });
        });
    }

    async function EditEnquiry(enquiryid) {
        try {
            $('#enquiryFormModal').modal('show');
            const result = await GetEnquiryByID(enquiryid);
        } catch (error) {
            console.error("Error fetching enquiry data:", error);
        }
    }
    $('#EnquiryResponeSubmit').click(function () {
        $('#EnquiryResponeSubmitSpinner').show();
        $("#EnquiryResponeSubmit").prop("disabled", true);
        var check = $('#IsRequestCallBack').prop('checked');
        var datastring = {
            Name: $('#name').val(), Email: $('#email').val(), Phone: $('#phone').val(), IsResponded: $('#IsResponded').prop('checked'), IsOnHold: $('#IsOnHold').prop('checked'),
            IsRequestCallBack: $('#IsRequestCallBack').prop('checked'), IsCallAttemptFailed: $('#IsCallAttemptFailed').prop('checked'), ResponderNote: $('#responderNote').val()
        };
        var object2 = '/Admin/SubmitEnquiryResponse';

        Callservice(datastring, object2);
    });
    // DashboardDatatable.on('order.dt', () => eventFired('Order'))

</script>

