@{
    ViewData["Title"] = "Dashboard";
    Layout = "_AdminLayout";
}




<div class="row">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-header" style="background-color:#D3D3D3">
                Customer Group List
            </div>

            <div class="card-body">
                <table id="myTable" class="table table-hover table-bordered">
                    <thead>
                        <tr>
                            <th><label>Enquiry ID</label></th>
                            <th><label>Name</label></th>

                            <th><label>Email</label></th>

                            <th><label>Phone</label></th>
                            <th><label>Class Type</label></th>

                            <th><label>Is Responded</label></th>

                            <th><label>Is OnHold</label></th>
                            <th><label>Is Request Call Back</label></th>

                            <th><label>Is Call Attempt Failed</label></th>
                        </tr>

                    </thead>
                    <tfoot>
                        <tr>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" placeholder="Search Name" /></th>
                            <th><input type="text" placeholder="Search Email" /></th>
                            <th><input type="text" placeholder="Search Phone" /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                            <th><input type="text" disabled /></th>
                        </tr>
                    </tfoot>
                    @* <tbody>

                    <tr>
                    <td><label>Name</label></td>

                    <td><label>Status</label></td>

                    <td>
                    <a asp-action="Edit" asp-route-id="1" id="loader"><i class="fa fa-edit" title="Edit" style="color:#513795"></i></a>
                    <span> | </span> <a asp-action="Delete" asp-route-id="1" id="loader"><i class="fa fa-trash" title="Delete" style="color:#513795"></i></a>
                    </td>
                    </tr>
                    <tr>
                    <td><label>Muthu</label></td>

                    <td><label>Status</label></td>

                    <td>
                    <a asp-action="Edit" asp-route-id="1" id="loader"><i class="fa fa-edit" title="Edit" style="color:#513795"></i></a>
                    <span> | </span> <a asp-action="Delete" asp-route-id="1" id="loader"><i class="fa fa-trash" title="Delete" style="color:#513795"></i></a>
                    </td>
                    </tr>
                    <tr>
                    <td><label>Kanaga</label></td>

                    <td><label>Status</label></td>

                    <td>
                    <a asp-action="Edit" asp-route-id="1" id="loader"><i class="fa fa-edit" title="Edit" style="color:#513795"></i></a>
                    <span> | </span> <a asp-action="Delete" asp-route-id="1" id="loader"><i class="fa fa-trash" title="Delete" style="color:#513795"></i></a>
                    </td>
                    </tr>

                    </tbody> *@
                </table>
            </div>
            <div class="row">
                <div class="col-md-6" id="table-info">
                </div>
                <div class="col-md-6">
                    <nav aria-label="Page navigation example">
                        <ul class="pagination" id="CustomPagination">
                        </ul>
                    </nav>
                </div>

            </div>

        </div>
    </div>
</div>

<script>
    var totalCount = 0;
    var DashboardDatatable = $('#myTable').DataTable({
        "scrollY": '400px',
        "scrollX": true,
        "scrollCollapse": true,
        "paging": true,
        "layout": {
            "topStart": null,
            "topEnd": null,
            "bottomStart": null,
            "bottomEnd": null,
        },
        "columnDefs": [
            { "targets": [5, 6, 7, 8, 9], "searchable": false, "orderable": false }
        ],
        "columns": [
            { "data": "enquiryID", "name": "EnquiryID", "autoWidth": true },
            { "data": "name", "name": "Name", "autoWidth": true },
            { "data": "email", "name": "Email", "autoWidth": true },
            { "data": "phone", "name": "Phone", "autoWidth": true },
            { "data": "classType", "name": "ClassType", "autoWidth": true },
            { "data": "isResponded", "name": "IsResponded", "autoWidth": true },
            { "data": "isOnHold", "name": "IsOnHold", "autoWidth": true },
            { "data": "isRequestCallBack", "name": "IsRequestCallBack", "autoWidth": true },
            { "data": "isCallAttemptFailed", "name": "IsCallAttemptFailed", "autoWidth": true },
            {
                "render": function (data, type, full, meta) {
                    return '<a class="btn btn-info" href="/Demo/Edit/">Edit</a>';
                },
                "targets": 9
            }
        ],
        "data": [], // Initially, no data is bound
        "initComplete": function () {

        }
    });
    $(document).ready(function () {

        DataTableBindData(1)


    });
    function CustomPagination(totalCount, currentPage) {
        var totalPages = Math.ceil(totalCount / 10);
        var pagination = '';

        if (currentPage > 1) {
            pagination += '<li class="page-item"><a class="page-link" href="#" onclick="PaginationClick(' + (currentPage - 1) + ')">Previous</a></li>';
        }

        for (var i = 1; i <= totalPages; i++) {
            pagination += '<li class="page-item ' + (i === currentPage ? 'active' : '') + '">';
            pagination += '<a class="page-link" href="#" onclick="PaginationClick(' + i + ')">' + i + '</a>';
            pagination += '</li>';
        }

        if (currentPage < totalPages) {
            pagination += '<li class="page-item"><a class="page-link" href="#" onclick="PaginationClick(' + (currentPage + 1) + ')">Next</a></li>';
        }

        $("#CustomPagination").html(pagination);
    }
    function BindDatatableInfo(TotalCount, pageno) {
        var startcount = (pageno-1)+'1';
        var endcount = pageno+'0';
        let toolbar = `<b>Showing ${startcount} to ${endcount} of ${TotalCount} entries</b>`;
        // $('.dt-info').html(toolbar);
        $('#table-info').html(toolbar);
    }

    // function handlePageClick(index) {
    //     let pageCount = Math.ceil(totalCount / 10)
    //     if (index === 'first' || index === 'previous' || index === 'next' || index === 'last') {
    //         // Get all buttons in the pagination
    //         const buttons = document.querySelectorAll('.pgbtn');
    //         // Find the previously active button (if any)
    //         const previousActiveButton = document.querySelector('.dt-paging-button.current.pgbtn');

    //         // if (previousActiveButton) {
    //         //     previousActiveButton.classList.remove('current');
    //         //     previousActiveButton.removeAttribute('aria-current');
    //         // }
    //         var NextButton = '';
    //         if (index === 'next') {
    //             NextButton = buttons[parseInt(previousActiveButton.innerText)]
    //             if (parseInt(previousActiveButton.innerText) === totalCount) return;
    //         }
    //         else if (index === 'previous') {
    //             NextButton = buttons[(parseInt(previousActiveButton.innerText) - 2)]
    //             if (parseInt(previousActiveButton.innerText) === 1) return;
    //         }
    //         else if (index === 'first') {
    //             NextButton = buttons[0]
    //             if (parseInt(previousActiveButton.innerText) === 1) return;
    //         }
    //         else if (index === 'last') {
    //             NextButton = buttons[pageCount - 1]
    //             if (parseInt(previousActiveButton.innerText) === totalCount) return;
    //         }

    //         // if (NextButton) {
    //         //     NextButton.classList.add('current');
    //         //     NextButton.setAttribute('aria-current', 'page');
    //         // }
    //         index = parseInt(NextButton.innerText)
    //     }
    //     index = index - 1;


    //     const btnfirst = document.querySelector('.dt-paging-button.first');
    //     const btnprevious = document.querySelector('.dt-paging-button.previous');
    //     const btnnext = document.querySelector('.dt-paging-button.next');
    //     const btnlast = document.querySelector('.dt-paging-button.last');
    //     // Get all buttons in the pagination
    //     const buttons = document.querySelectorAll('.pgbtn');

    //     // Find the previously active button (if any)
    //     const previousActiveButton = document.querySelector('.dt-paging-button.current.pgbtn');

    //     // Remove the 'current' class from the previous active button (if it exists)
    //     if (previousActiveButton) {
    //         previousActiveButton.classList.remove('current');
    //         previousActiveButton.removeAttribute('aria-current');
    //     }

    //     // Find the clicked button based on the index and add 'current' class
    //     const clickedButton = buttons[index];
    //     if (clickedButton) {
    //         clickedButton.classList.add('current');
    //         clickedButton.setAttribute('aria-current', 'page');
    //     }

    //     // Call any method to handle the page change (e.g., load data for the new page)
    //     // Replace this with your data update logic
    //     if (index === pageCount - 1) {
    //         btnlast.classList.add('disabled');
    //         btnlast.setAttribute('aria-disabled', 'true');
    //         btnnext.classList.add('disabled');
    //         btnnext.setAttribute('aria-disabled', 'true');

    //         btnfirst.classList.remove('disabled');
    //         btnfirst.removeAttribute('aria-disabled');
    //         btnprevious.classList.remove('disabled');
    //         btnprevious.removeAttribute('aria-disabled');
    //     }
    //     else if (index === 0) {
    //         btnfirst.classList.add('disabled');
    //         btnfirst.setAttribute('aria-disabled', 'true');
    //         btnprevious.classList.add('disabled');
    //         btnprevious.setAttribute('aria-disabled', 'true');

    //         btnlast.classList.remove('disabled');
    //         btnlast.removeAttribute('aria-disabled');
    //         btnnext.classList.remove('disabled');
    //         btnnext.removeAttribute('aria-disabled');
    //     }
    //     else {
    //         btnfirst.classList.remove('disabled');
    //         btnfirst.removeAttribute('aria-disabled');
    //         btnprevious.classList.remove('disabled');
    //         btnprevious.removeAttribute('aria-disabled');
    //         btnlast.classList.remove('disabled');
    //         btnlast.removeAttribute('aria-disabled');
    //         btnnext.classList.remove('disabled');
    //         btnnext.removeAttribute('aria-disabled');
    //     }
    //     // $('#myTable').DataTable().destroy();
    //     DataTableBindData(index + 1)
    // }
    // function BindPagination(TotalCount) {

    //     let pageCount = Math.ceil(TotalCount / 10)
    //     // Create the layout container
    //     // var layoutCell = $('<div>', {
    //     //     class: 'dt-layout-cell dt-layout-end'
    //     // });

    //     // // Create the pagination container
    //     // var pagingDiv = $('<div>', {
    //     //     class: 'dt-paging'
    //     // });

    //     // Create the navigation element
    //     var nav = $('<nav>', {
    //         'aria-label': 'pagination'
    //     });

    //     // Create the fixed buttons (First, Previous)
    //     var fixedButtonsStart = [
    //         { class: 'dt-paging-button first', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'First', 'data-dt-idx': 'first', text: '«', onclick: 'handlePageClick(\'first\')' },
    //         { class: 'dt-paging-button previous', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'Previous', 'data-dt-idx': 'previous', text: '‹', onclick: 'handlePageClick(\'previous\')' }
    //     ];

    //     // Add 'First' and 'Previous' buttons
    //     fixedButtonsStart.forEach(function (button) {
    //         var btn = $('<button>', button);
    //         nav.append(btn);
    //     });

    //     // Dynamically create numbered buttons based on pageCount
    //     for (var i = 1; i <= pageCount; i++) {
    //         var buttonConfig = {
    //             class: i === 1 ? 'dt-paging-button current pgbtn' : 'dt-paging-button pgbtn', // Highlight the first button as current
    //             role: 'link',
    //             type: 'button',
    //             'aria-controls': 'example',
    //             'data-dt-idx': i - 1,
    //             text: i,
    //             'aria-current': i === 1 ? 'page' : null, // Set 'aria-current' only for the current page
    //             onclick: 'handlePageClick(' + i + ')'
    //         };
    //         var btn = $('<button>', buttonConfig);
    //         nav.append(btn);
    //     }

    //     // Create the fixed buttons (Next, Last)
    //     var fixedButtonsEnd = [
    //         { class: 'dt-paging-button next', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'Next', 'data-dt-idx': 'next', text: '›', onclick: 'handlePageClick(\'next\')' },
    //         { class: 'dt-paging-button last', role: 'link', type: 'button', 'aria-controls': 'example', 'aria-label': 'Last', 'data-dt-idx': 'last', text: '»', onclick: 'handlePageClick(\'last\')' }
    //     ];

    //     // Add 'Next' and 'Last' buttons
    //     fixedButtonsEnd.forEach(function (button) {
    //         var btn = $('<button>', button);
    //         nav.append(btn);
    //     });

    //     // Build the final structure
    //     // pagingDiv.append(nav);
    //     // layoutCell.append(pagingDiv);

    //     //return layoutCell;
    //     $('.dt-paging').empty()
    //     $('.dt-paging').append(nav);
    // }
    function eventFired(type) {
        console.log(type)
    }
    function PaginationClick(pageIndex) {
        DataTableBindData(pageIndex)
    }

    function DataTableBindData(pageno) {
        return new Promise(function (resolve, reject) {
            $.ajax({
                type: 'POST',
                url: "/Admin/GetDashboardData",
                data: { page: parseInt(pageno) },
                dataType: 'json',
                /* timeout: 1000,*/
                success: function (result) {
                    totalCount = result.recordsTotal;
                    if (result.recordsTotal > 0) {
                        DashboardDatatable.clear(); // Clear existing rows
                        DashboardDatatable.rows.add(result.data); // Add new data
                        DashboardDatatable.draw(false); // Redraw the table
                        // BindPagination(totalCount);
                        CustomPagination(totalCount, pageno)
                        BindDatatableInfo(totalCount, pageno);
                    }

                },
                error: function (err) {
                    reject(err);
                }
            });
        });
    }
    // table.on('order.dt', () => eventFired('Order'))

</script>


